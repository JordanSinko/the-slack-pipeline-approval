// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348dArtifactHashEEC8ED0C": Object {
      "Description": "Artifact hash for asset \\"9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348d\\"",
      "Type": "String",
    },
    "AssetParameters9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348dS3Bucket01FB5559": Object {
      "Description": "S3 bucket for asset \\"9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348d\\"",
      "Type": "String",
    },
    "AssetParameters9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348dS3VersionKey4C30C2E2": Object {
      "Description": "S3 key for asset version \\"9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348d\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ApprovalApi7AD56316": Object {
      "Properties": Object {
        "Name": "Api",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "ApprovalApiANYproxy80D0C580": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ApprovalApi7AD56316",
        },
        "RouteKey": "ANY /{proxy+}",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "ApprovalApiANYproxyANYproxyIntegration9EB5C601",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "ApprovalApiANYproxyANYproxyIntegration9EB5C601": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ApprovalApi7AD56316",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "ApprovalApprover72D44F63",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "ApprovalApiANYproxytestingstackApprovalApiANYproxy59DA5EE7Permission2A619A51": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApprovalApprover72D44F63",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApprovalApi7AD56316",
              },
              "/*/*/{proxy+}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApprovalApiDefaultStage1F3689E0": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "ApprovalApi7AD56316",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "ApprovalApprover72D44F63": Object {
      "DependsOn": Array [
        "ApprovalApproverServiceRoleDefaultPolicyED46B616",
        "ApprovalApproverServiceRole747D061A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348dS3Bucket01FB5559",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348dS3VersionKey4C30C2E2",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348dS3VersionKey4C30C2E2",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_ACCOUNT_ID": Object {
              "Ref": "AWS::AccountId",
            },
            "SLACK_TOKEN": "xoxb-12345",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ApprovalApproverServiceRole747D061A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApprovalApproverServiceRole747D061A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApprovalApproverServiceRoleDefaultPolicyED46B616": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:PutApprovalResult",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "PipelineC660917D",
                    },
                    "/Approval/Approval",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApprovalApproverServiceRoleDefaultPolicyED46B616",
        "Roles": Array [
          Object {
            "Ref": "ApprovalApproverServiceRole747D061A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineApprovalCodePipelineActionRole57856A07": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineApprovalCodePipelineActionRoleDefaultPolicyB287A5B7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "TopicBFC7AF6E",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineApprovalCodePipelineActionRoleDefaultPolicyB287A5B7",
        "Roles": Array [
          Object {
            "Ref": "PipelineApprovalCodePipelineActionRole57856A07",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineArtifactsBucket22248F97": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "PipelineArtifactsBucketEncryptionKey01D58D69",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "PipelineArtifactsBucketEncryptionKey01D58D69": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "PipelineRoleD68726F7",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "PipelineArtifactsBucketEncryptionKeyAlias5C510EEE": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AliasName": "alias/codepipeline-testingstackpipeline7c2d60a2",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "PipelineArtifactsBucketEncryptionKey01D58D69",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
      "UpdateReplacePolicy": "Delete",
    },
    "PipelineC660917D": Object {
      "DependsOn": Array [
        "PipelineRoleDefaultPolicyC7A05455",
        "PipelineRoleD68726F7",
      ],
      "Properties": Object {
        "ArtifactStore": Object {
          "EncryptionKey": Object {
            "Id": Object {
              "Fn::GetAtt": Array [
                "PipelineArtifactsBucketEncryptionKey01D58D69",
                "Arn",
              ],
            },
            "Type": "KMS",
          },
          "Location": Object {
            "Ref": "PipelineArtifactsBucket22248F97",
          },
          "Type": "S3",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "PipelineRoleD68726F7",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1",
                },
                "Configuration": Object {
                  "Branch": "master",
                  "OAuthToken": "{{resolve:secretsmanager:GITHUB_TOKEN:SecretString:::}}",
                  "Owner": "JordanSinko",
                  "PollForSourceChanges": false,
                  "Repo": "the-slack-pipeline-approval",
                },
                "Name": "GitHub",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_GitHub",
                  },
                ],
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1",
                },
                "Configuration": Object {
                  "CustomData": "{\\"slackChannel\\":\\"1\\"}",
                  "NotificationArn": Object {
                    "Ref": "TopicBFC7AF6E",
                  },
                },
                "Name": "Approval",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "PipelineApprovalCodePipelineActionRole57856A07",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Approval",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "PipelineRoleD68726F7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PipelineRoleDefaultPolicyC7A05455": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PipelineArtifactsBucket22248F97",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "PipelineArtifactsBucket22248F97",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineArtifactsBucketEncryptionKey01D58D69",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "PipelineApprovalCodePipelineActionRole57856A07",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PipelineRoleDefaultPolicyC7A05455",
        "Roles": Array [
          Object {
            "Ref": "PipelineRoleD68726F7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PipelineSourceGitHubWebhookResource60875CAB": Object {
      "Properties": Object {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": Object {
          "SecretToken": "{{resolve:secretsmanager:GITHUB_TOKEN:SecretString:::}}",
        },
        "Filters": Array [
          Object {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}",
          },
        ],
        "RegisterWithThirdParty": true,
        "TargetAction": "GitHub",
        "TargetPipeline": Object {
          "Ref": "PipelineC660917D",
        },
        "TargetPipelineVersion": 1,
      },
      "Type": "AWS::CodePipeline::Webhook",
    },
    "RequesterAllowInvoketestingstackTopic636EF16810BC6C79": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "RequesterC5D85B6B",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": Object {
          "Ref": "TopicBFC7AF6E",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RequesterC5D85B6B": Object {
      "DependsOn": Array [
        "RequesterServiceRole455136E7",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348dS3Bucket01FB5559",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348dS3VersionKey4C30C2E2",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters9df69b1c5244ca159360ab80f7e94d352de6fc13390ac375c21274ed8bed348dS3VersionKey4C30C2E2",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_ACCOUNT_ID": Object {
              "Ref": "AWS::AccountId",
            },
            "SLACK_TOKEN": "xoxb-12345",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "RequesterServiceRole455136E7",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "RequesterServiceRole455136E7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RequesterTopic2A59E833": Object {
      "Properties": Object {
        "Endpoint": Object {
          "Fn::GetAtt": Array [
            "RequesterC5D85B6B",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": Object {
          "Ref": "TopicBFC7AF6E",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "TopicBFC7AF6E": Object {
      "Type": "AWS::SNS::Topic",
    },
  },
}
`;
